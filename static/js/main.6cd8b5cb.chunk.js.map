{"version":3,"sources":["utils/eos.js","Header.jsx","Footer.jsx","components/Transaction.jsx","App.js","serviceWorker.js","reducers.js","index.js","storeConfig.js"],"names":["network","blockchain","protocol","host","chainId","port","socketSvr","test_network","EOS","httpEndpoint","concat","Object","objectSpread","MyHeader","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","login","state","scatter","getIdentity","accounts","then","message","success","window","setState","identity","get_user_info","catch","error","warning","login_out","change","arguments","length","undefined","forgetIdentity","scatter_name","context","store","dispatch","type","payload","scatter_account","bind","assertThisInitialized","document","addEventListener","scatterExtension","console","warn","account","find","name","authority","checked","main_net","_this2","menu","react_default","a","createElement","es_menu","Item","key","onClick","className","es_switch","checkedChildren","unCheckedChildren","defaultChecked","onChange","net_change","dropdown","overlay","es_button","avatar","icon","size","Component","contextTypes","PropTypes","object","Footer","Layout","MyFooter","style","textAlign","Transaction","result","param_ref","value","log","config","JSON","parse","_store$getState","getState","info","trx_option","authorization","eos","Eos","contract","fn","params","data","stringify","e","msg","details","String","_this3","rows","placeholder","ref","el","clear","marginLeft","send","Content","Header","Sider","App","Menu","SubMenu","onCollapse","collapsed","layout","minHeight","collapsible","theme","defaultSelectedKeys","mode","src_Header","margin","src_components_Transaction","src_Footer","Boolean","location","hostname","match","reducers","action","new_state","preState","middlewares","thunk","applys","applyMiddleware","apply","createStore","configureStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"ydAQaA,EAAU,CACrBC,WAAY,MACZC,SAAU,QACVC,KAAM,wBACNC,QAAS,mEACTC,KAAK,IACLC,UAAU,yBAQCC,GALeC,IAAI,CAC9BC,aAAY,GAAAC,OAAKV,EAAQE,SAAb,OAAAQ,OAA2BV,EAAQG,KAAnC,KAAAO,OAA2CV,EAAQK,MAC/DD,QAASJ,EAAQI,UAGMO,OAAAC,EAAA,EAAAD,CAAA,GACpBX,EArBQ,CACXG,KAAM,0BACNG,UAAU,qBACVF,QAAQ,sEA2BKI,GALkBA,IAAI,CACnCC,aAAY,GAAAC,OAAKH,EAAaL,SAAlB,OAAAQ,OAAgCH,EAAaJ,KAA7C,KAAAO,OAAqDH,EAAaF,MAC9ED,QAASG,EAAaH,UAGTI,EAAf,mBCtBMK,cAMF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAJ,OAAAK,EAAA,EAAAL,CAAAM,KAAAJ,IACdE,EAAAJ,OAAAO,EAAA,EAAAP,CAAAM,KAAAN,OAAAQ,EAAA,EAAAR,CAAAE,GAAAO,KAAAH,KAAMH,KAsCVO,MAAQ,WACAN,EAAKO,MAAMC,QACXR,EAAKO,MAAMC,QAAQC,YAAY,CAAEC,SAAU,CAACzB,KAAY0B,KAAK,WACzDC,IAAQC,QAAQ,4BAChB,IAAML,EAAUM,OAAON,QACvBR,EAAKe,SAAS,CACVP,WACD,WACKA,EAAQQ,UAAYR,EAAQQ,SAASN,UACrCV,EAAKiB,cAAcT,OAG5BU,MAAM,WACLN,IAAQO,MAAM,wEAGlBP,IAAQQ,QAAQ,+BAvDNpB,EA2DlBqB,UAAW,WAAmB,IAAlBC,EAAkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC1BT,OAAON,QAAQkB,iBAAiBf,KAAK,WACjCX,EAAKe,SAAS,CACVY,kBAAaF,IAECzB,EAAK4B,QAAfC,MAEFC,SAAS,CACXC,KAAK,YACLC,QAAS,CACLC,qBAAiBR,KAGrBH,GACAtB,EAAKM,WAvEbN,EAAKO,MAAQ,CACToB,kBAAcF,GAElBzB,EAAKiB,cAAgBjB,EAAKiB,cAAciB,KAAnBtC,OAAAuC,EAAA,EAAAvC,QAAAuC,EAAA,EAAAvC,CAAAI,KAErBoC,SAASC,iBAAiB,gBAAiB,SAAAC,GACvCC,QAAQC,KAAK,WAAY1B,OAAON,SAChC,IAAMA,EAAUM,OAAON,QACvBR,EAAKe,SAAS,CAACP,WAAU,WACjBA,EAAQQ,UAAYR,EAAQQ,SAASN,SACrCV,EAAKiB,cAAcT,GAEnBR,EAAKM,YAdHN,0HAwBJQ,GACV,IAAMiC,EAAUjC,EAAQQ,SAASN,SAASgC,KAAK,SAACD,GAAD,MAAoC,QAAvBA,EAAQvD,aACjC,GAAAS,OAAI8C,EAAQE,KAAZ,KAAAhD,OAAoB8C,EAAQG,WAC/D1C,KAAKa,SAAS,CACVY,aAAac,EAAQE,OAEPzC,KAAK0B,QAAfC,MACFC,SAAS,CACXC,KAAK,kBACLC,QAAS,CACLC,gBAAiBQ,wCA4ClBI,GAEO3C,KAAK0B,QAAQC,MACrBC,SAAS,CACXC,KAAK,aACLC,QAAS,CAACc,SAAUD,sCAInB,IAAAE,EAAA7C,KACGyB,EAAiBzB,KAAKK,MAAtBoB,aAEFqB,EACFC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWC,IAAI,IAAIC,QAAS,WAAOR,EAAK1B,WAAU,KAAlD,4BACA4B,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWC,IAAI,IAAIC,QAAS,WAAOR,EAAK1B,cAAxC,6BAGR,OACI4B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,eACXP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,oBACXP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAQC,gBAAgB,eAAKC,kBAAkB,eAAKC,gBAAc,EAAEJ,UAAU,aAAaK,SAAU,SAAChB,GAAaE,EAAKe,WAAWjB,MAClIlB,EAAesB,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAUC,QAAShB,GAC3BC,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQT,UAAU,aAAYP,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAQC,KAAK,OAAOC,KAAK,UAAvD,OAAuEzC,IAE1EsB,EAAAC,EAAAC,cAAA,QAAMK,UAAU,QAAQD,QAAS,WAAOR,EAAKzC,UAA7C,+BA7GF+D,aAAjBvE,EAEKwE,aAAe,CAClBzC,MAAO0C,IAAUC,QAkHV1E,iBCzHX2E,EACEC,IADFD,OAcWE,mLARP,OACI1B,EAAAC,EAAAC,cAACsB,EAAD,CAAQG,MAAO,CAAEC,UAAW,WAA5B,6DAJWR,aCMjBS,sBAIF,SAAAA,EAAY/E,GAAM,IAAAC,EAAA,OAAAJ,OAAAK,EAAA,EAAAL,CAAAM,KAAA4E,IACd9E,EAAAJ,OAAAO,EAAA,EAAAP,CAAAM,KAAAN,OAAAQ,EAAA,EAAAR,CAAAkF,GAAAzE,KAAAH,KAAMH,KACDQ,MAAQ,CACTwE,OAAO,IAHG/E,uEAQdE,KAAK8E,UAAUC,MAAQ,GACvB/E,KAAKa,SAAS,CACVgE,OAAQ,KAEZxC,QAAQ2C,IAAIhF,KAAK8E,UAAUC,sCAGxB,IAAAlC,EAAA7C,KACH,IACI,IAAMiF,EAASC,KAAKC,MAAMnF,KAAK8E,UAAUC,OACzC1C,QAAQ2C,IAAIC,GACZ,IAAMtD,EAAQ3B,KAAK0B,QAAQC,MAH5ByD,EAIuCzD,EAAM0D,WAApCtD,EAJTqD,EAISrD,gBAAiBa,EAJ1BwC,EAI0BxC,SAEzB,GADAP,QAAQ2C,IAAIrD,EAAM0D,aACbtD,EAED,YADArB,IAAQ4E,KAAK,4BAGjBtF,KAAKa,SAAS,CACVgE,OAAQ,KAIZ,IAAMU,EAAa,CAACC,cAAe,IAAA/F,OAAIsC,EAAgBU,KAApB,KAAAhD,OAA4BsC,EAAgBW,aAG/EL,QAAQ2C,IAAIjG,EAASO,GACrB,IAAMmG,EAAM7C,EAAWhC,OAAON,QAAQmF,IAAI1G,EAAS2G,EAAK,IAAM9E,OAAON,QAAQmF,IAAInG,EAAcoG,EAAK,IACpGrD,QAAQ2C,IAAI,MAAOS,GACnBA,EAAIE,SAASV,EAAOU,UAAUlF,KAAK,SAAAkF,GAC/BA,EAASV,EAAOW,IAAIX,EAAOY,OAAQN,GAAY9E,KAAK,SAACqF,GACjDzD,QAAQ2C,IAAIc,GACZpF,IAAQC,QAAQ,4BAChBkC,EAAKhC,SAAS,CACVgE,OAAQK,KAAKa,UAAUD,OAE5B9E,MAAM,SAAAgF,GACL,IAAMC,EAAoB,kBAAPD,EAAiBd,KAAKC,MAAMa,GAAG/E,MAAMiF,QAAQ,GAAGxF,QAAUsF,EAAEtF,QAC/EA,IAAQO,MAAMgF,GACdpD,EAAKhC,SAAS,CACVgE,OAAQoB,QAGjBjF,MAAM,SAAAgF,GACL,IAAMC,EAAoB,kBAAPD,EAAiBd,KAAKC,MAAMa,GAAG/E,MAAMiF,QAAQ,GAAGxF,QAAUsF,EAAEtF,QAC/EA,IAAQO,MAAMgF,GACdpD,EAAKhC,SAAS,CACVgE,OAAQoB,MAGnB,MAAMD,GACH,IAAMC,EAAoB,kBAAPD,EAAiBd,KAAKC,MAAMa,GAAG/E,MAAMiF,QAAQ,GAAGxF,QAAUsF,EAAEtF,QAC/EA,IAAQO,MAAMkF,OAAOF,sCAOpB,IAAAG,EAAApG,KACG6E,EAAW7E,KAAKK,MAAhBwE,OACR,OACI9B,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACXP,EAAAC,EAAAC,cAAA,YAAUoD,KAAK,KAAKC,YAAY,+BAAWhD,UAAU,aAAaiD,IAAK,SAACC,GAAMJ,EAAKtB,UAAY0B,KAC/FzD,EAAAC,EAAAC,cAAA,OAAKK,UAAU,YACXP,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQV,QAAS,WAAO+C,EAAKK,UAA7B,gBACA1D,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAQlC,KAAK,UAAU6C,MAAO,CAACgC,WAAY,QAASrD,QAAS,WAAM+C,EAAKO,SAAxE,iBAEJ5D,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACVuB,WAjFKV,cAApBS,EACKR,aAAe,CAClBzC,MAAO0C,IAAUC,QAsFVM,gBC1FLgC,GACNpC,IADFqC,OACErC,IADMoC,SAASE,EACftC,IADesC,MAKbC,GAFUC,IAAKC,oBAMnB,SAAAF,EAAYlH,GAAO,IAAAC,EAAA,OAAAJ,OAAAK,EAAA,EAAAL,CAAAM,KAAA+G,IACjBjH,EAAAJ,OAAAO,EAAA,EAAAP,CAAAM,KAAAN,OAAAQ,EAAA,EAAAR,CAAAqH,GAAA5G,KAAAH,KAAMH,KAURqH,WAAa,SAACC,GACZ9E,QAAQ2C,IAAImC,GACZrH,EAAKe,SAAS,CAAEsG,eAXhBrH,EAAKO,MAAQ,CACX8G,WAAW,GAHIrH,mFAQjBuC,QAAQ2C,IAAIhF,KAAK0B,0CASjB,OACEqB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACXP,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAQ1C,MAAO,CAAE2C,UAAW,UAC5BtE,EAAAC,EAAAC,cAAC6D,EAAD,CACEQ,aAAW,EACXH,UAAWnH,KAAKK,MAAM8G,UACtBD,WAAYlH,KAAKkH,YAEjBnE,EAAAC,EAAAC,cAAA,OAAKK,UAAU,cACfP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMqE,MAAM,OAAOC,oBAAqB,CAAC,KAAMC,KAAK,UAClD1E,EAAAC,EAAAC,cAACC,EAAA,EAAKC,KAAN,CAAWC,IAAI,KACbL,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMpC,KAAK,cACXkB,EAAAC,EAAAC,cAAA,yBA2BNF,EAAAC,EAAAC,cAACmE,EAAA,EAAD,KACErE,EAAAC,EAAAC,cAACyE,EAAD,MACA3E,EAAAC,EAAAC,cAAC2D,EAAD,CAASlC,MAAO,CAAEiD,OAAQ,gBACxB5E,EAAAC,EAAAC,cAAC2E,EAAD,OAEF7E,EAAAC,EAAAC,cAAC4E,EAAD,gBAjEM1D,cAAZ4C,EACG3C,aAAe,CACpBzC,MAAO0C,IAAUC,QAuENyC,QC/EKe,QACW,cAA7BlH,OAAOmH,SAASC,UAEe,UAA7BpH,OAAOmH,SAASC,UAEhBpH,OAAOmH,SAASC,SAASC,MACvB,yFClBSC,UAAA,WAAsC,IAArC7H,EAAqCgB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA7B,CAACuB,UAAU,GAAOuF,EAAW9G,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1CM,EAAiBsG,EAAjBtG,KAAMC,EAAWqG,EAAXrG,QACTsG,EAAS1I,OAAAC,EAAA,EAAAD,CAAA,GAAOW,EAAUyB,GAE9B,OAAQD,GACJ,IAAK,kBAEL,IAAK,YAEL,IAAK,aACL,OAAOuG,KCDTzG,ECJiB,WAAmB,IAAlB0G,EAAkBhH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GACzBiH,EAAc,CAACC,KACjBC,EAASC,IAAeC,WAAf,EAAmBJ,GAChC,OAAOK,YACHT,EACAG,EACAG,GDFMI,GACdvG,QAAQ2C,IAAI,IAAIrD,GAChBkH,IAASC,OACL/F,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAUpH,MAAOA,GACboB,EAAAC,EAAAC,cAAC+F,EAAD,OAEJ9G,SAAS+G,eAAe,SFkHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3I,KAAK,SAAA4I,GACjCA,EAAaC","file":"static/js/main.6cd8b5cb.chunk.js","sourcesContent":["import EOS from 'eosjs';\r\n\r\nlet config = { // 麒麟网\r\n  host: 'api-kylin.eoslaomao.com',\r\n  socketSvr:'192.168.0.222:8080',\r\n  chainId:'5fff1dae8dc8e2fc4d5b23b2c7665c97f9e9d8edf2b6485a86ba311c25639191'\r\n}\r\n\r\nexport const network = {\r\n  blockchain: 'eos',\r\n  protocol: 'https',\r\n  host: 'nodes.get-scatter.com',\r\n  chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906',\r\n  port:443,\r\n  socketSvr:'http://data.trust.bet',\r\n};\r\n\r\nexport const eos_instance = EOS({\r\n  httpEndpoint: `${network.protocol}://${network.host}:${network.port}`,\r\n  chainId: network.chainId\r\n});\r\n\r\nexport const test_network = {\r\n  ...network,\r\n  ...config\r\n}\r\n\r\nexport const eos_test_instance = EOS({\r\n  httpEndpoint: `${test_network.protocol}://${test_network.host}:${test_network.port}`,\r\n  chainId: test_network.chainId\r\n});\r\n\r\nexport default EOS","import React, { Component } from 'react';\r\nimport './Header.scss';\r\n\r\nimport { message, Avatar, Dropdown, Menu, Button, Switch } from 'antd';\r\nimport {\r\n    eos_instance,\r\n    network,\r\n} from './utils/eos';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass MyHeader extends Component {\r\n    \r\n    static contextTypes = {\r\n        store: PropTypes.object,\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            scatter_name: undefined\r\n        }\r\n        this.get_user_info = this.get_user_info.bind(this);\r\n\r\n        document.addEventListener('scatterLoaded', scatterExtension => {\r\n            console.warn('scatter:', window.scatter);\r\n            const scatter = window.scatter;\r\n            this.setState({scatter}, () => {\r\n                if (scatter.identity && scatter.identity.accounts) {\r\n                    this.get_user_info(scatter);\r\n                } else {\r\n                    this.login();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    get_user_info(scatter) {\r\n        const account = scatter.identity.accounts.find((account) => account.blockchain === 'eos');\r\n        const trx_option = {authorization: [`${account.name}@${account.authority}`]};\r\n        this.setState({\r\n            scatter_name:account.name\r\n        });\r\n        const { store } = this.context;\r\n        store.dispatch({\r\n            type:'scatter_account',\r\n            payload: {\r\n                scatter_account: account\r\n            }\r\n        });\r\n    }\r\n\r\n    login = () => {\r\n        if (this.state.scatter) {\r\n            this.state.scatter.getIdentity({ accounts: [network] }).then(() => {\r\n                message.success('登陆成功');\r\n                const scatter = window.scatter;\r\n                this.setState({\r\n                    scatter,\r\n                }, () => {\r\n                    if (scatter.identity && scatter.identity.accounts) {\r\n                        this.get_user_info(scatter);\r\n                    }\r\n                });\r\n            }).catch(() => {\r\n                message.error('登陆失败，您取消了授权');\r\n            });\r\n        } else {\r\n            message.warning('请安装 scatter');\r\n        }\r\n    }\r\n\r\n    login_out= (change = false) =>{        \r\n        window.scatter.forgetIdentity().then(() => {\r\n            this.setState({\r\n                scatter_name:undefined,\r\n            });\r\n            const { store } = this.context;\r\n            \r\n            store.dispatch({\r\n                type:'login_out',\r\n                payload: {\r\n                    scatter_account: undefined\r\n                }\r\n            });\r\n            if (change) {\r\n                this.login();\r\n            }\r\n        });\r\n    }\r\n\r\n    net_change(checked) {\r\n        \r\n        const store = this.context.store;\r\n        store.dispatch({\r\n            type:'net_change',\r\n            payload: {main_net: checked}\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { scatter_name } = this.state;        \r\n\r\n        const menu = (\r\n            <Menu>\r\n                <Menu.Item key=\"1\" onClick={() => {this.login_out(true)}}>切换用户</Menu.Item>\r\n                <Menu.Item key=\"2\" onClick={() => {this.login_out()}}>退出登陆</Menu.Item>\r\n            </Menu>\r\n        );\r\n        return (\r\n            <div className=\"header_wrap\">\r\n                <div className=\"header_r fr hand\">\r\n                    <Switch checkedChildren=\"主网\" unCheckedChildren=\"麒麟\" defaultChecked  className=\"net_switch\" onChange={(checked) => {this.net_change(checked)}}/>\r\n                    {scatter_name ? <Dropdown overlay={menu}>\r\n                            <Button className=\"user_wrap\"><Avatar icon=\"user\" size=\"small\"/>&nbsp;{scatter_name}</Button>\r\n                        </Dropdown>:\r\n                        (<span className=\"login\" onClick={() => {this.login()}}>请登录</span>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyHeader;","import React, { Component } from 'react';\r\nimport {\r\n    Layout\r\n  } from 'antd';\r\n  \r\n  const {\r\n    Footer\r\n  } = Layout;\r\n\r\nclass MyFooter extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <Footer style={{ textAlign: 'center' }}>\r\n                Copyright©2018 trust.bet | All rights reserved.\r\n            </Footer>\r\n        )\r\n    }    \r\n}\r\n\r\nexport default MyFooter;","import React, { Component } from 'react';\r\nimport './Transaction.scss';\r\n\r\nimport { Button, message } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport Eos,{ network, test_network } from '../utils/eos';\r\n\r\nconst spread_fun = (source) => {\r\n    var arr = []\r\n    for (let i in source) {\r\n        arr.push(source[i]); //属性\r\n    }\r\n    return arr;\r\n}\r\n\r\nclass Transaction extends Component {\r\n    static contextTypes = {\r\n        store: PropTypes.object,\r\n    };\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            result:''\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.param_ref.value = '';\r\n        this.setState({\r\n            result: ''\r\n        });\r\n        console.log(this.param_ref.value);\r\n    }\r\n\r\n    send() {\r\n        try{\r\n            const config = JSON.parse(this.param_ref.value);\r\n            console.log(config);\r\n            const store = this.context.store;\r\n            const { scatter_account, main_net } = store.getState();\r\n            console.log(store.getState());\r\n            if (!scatter_account) {\r\n                message.info('请先登陆');\r\n                return;\r\n            }        \r\n            this.setState({\r\n                result: ''\r\n            }); \r\n            \r\n            // const params = spread_fun(config.params);\r\n            const trx_option = {authorization: [`${scatter_account.name}@${scatter_account.authority}`]};\r\n              \r\n            \r\n            console.log(network, test_network);\r\n            const eos = main_net ? window.scatter.eos(network, Eos, {}) : window.scatter.eos(test_network, Eos, {});\r\n            console.log('eos', eos);\r\n            eos.contract(config.contract).then(contract => {\r\n                contract[config.fn](config.params, trx_option).then((data) => {\r\n                    console.log(data);\r\n                    message.success('操作成功');\r\n                    this.setState({\r\n                        result: JSON.stringify(data)\r\n                    });\r\n                }).catch(e=> {\r\n                    const msg = typeof(e) === 'string'? JSON.parse(e).error.details[0].message : e.message;\r\n                    message.error(msg);\r\n                    this.setState({\r\n                        result: msg\r\n                    });\r\n                });             \r\n            }).catch(e => {\r\n                const msg = typeof(e) === 'string'? JSON.parse(e).error.details[0].message : e.message;\r\n                message.error(msg);\r\n                this.setState({\r\n                    result: msg\r\n                });\r\n            })\r\n        }catch(e){\r\n            const msg = typeof(e) === 'string'? JSON.parse(e).error.details[0].message : e.message;\r\n            message.error(String(msg));\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const { result } = this.state;\r\n        return (\r\n            <div className=\"tra_wrap\">\r\n                <textarea rows=\"10\" placeholder=\"输入发送data\" className=\"param_area\" ref={(el)=>{this.param_ref = el}}></textarea>\r\n                <div className=\"btn_line\">\r\n                    <Button onClick={() => {this.clear()}}>清空</Button>\r\n                    <Button type=\"primary\" style={{marginLeft: '10px'}} onClick={()=> {this.send()}}>发送</Button>\r\n                </div>\r\n                <div className=\"result_box\">\r\n                    {result}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Transaction;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nimport MyHeader from './Header';\r\nimport MyFooter from './Footer';\r\nimport Transaction from './components/Transaction';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Layout, Menu, Breadcrumb, Icon,\r\n} from 'antd';\r\n\r\nconst {\r\n  Header, Content, Sider,\r\n} = Layout;\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nclass App extends Component {\r\n  static contextTypes = {\r\n    store: PropTypes.object,\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: true,\r\n    };\r\n  }  \r\n\r\n  componentDidMount() {\r\n    console.log(this.context)\r\n  }\r\n\r\n  onCollapse = (collapsed) => {\r\n    console.log(collapsed);\r\n    this.setState({ collapsed });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n          <Layout style={{ minHeight: '100vh' }}>\r\n          <Sider\r\n            collapsible\r\n            collapsed={this.state.collapsed}\r\n            onCollapse={this.onCollapse}\r\n          >\r\n            <div className=\"logo hand\" />\r\n            <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n              <Menu.Item key=\"1\">\r\n                <Icon type=\"pie-chart\" />\r\n                <span>action</span>\r\n              </Menu.Item>\r\n              {/* <Menu.Item key=\"2\">\r\n                <Icon type=\"desktop\" />\r\n                <span>Option 2</span>\r\n              </Menu.Item>\r\n              <SubMenu\r\n                key=\"sub1\"\r\n                title={<span><Icon type=\"user\" /><span>User</span></span>}\r\n              >\r\n                <Menu.Item key=\"3\">Tom</Menu.Item>\r\n                <Menu.Item key=\"4\">Bill</Menu.Item>\r\n                <Menu.Item key=\"5\">Alex</Menu.Item>\r\n              </SubMenu>\r\n              <SubMenu\r\n                key=\"sub2\"\r\n                title={<span><Icon type=\"team\" /><span>Team</span></span>}\r\n              >\r\n                <Menu.Item key=\"6\">Team 1</Menu.Item>\r\n                <Menu.Item key=\"8\">Team 2</Menu.Item>\r\n              </SubMenu>\r\n              <Menu.Item key=\"9\">\r\n                <Icon type=\"file\" />\r\n                <span>File</span>\r\n              </Menu.Item> */}\r\n            </Menu>\r\n          </Sider>\r\n          <Layout>\r\n            <MyHeader/>\r\n            <Content style={{ margin: '16px 16px 0' }}>\r\n              <Transaction/>\r\n            </Content>\r\n            <MyFooter/>\r\n          </Layout>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export default (state = {main_net: true}, action) => {\r\n    const {type, payload} = action;\r\n    let new_state = {...state, ...payload};\r\n\r\n    switch (type) {\r\n        case 'scatter_account':\r\n        return new_state;\r\n        case 'login_out':\r\n        return new_state;\r\n        case 'net_change':\r\n        return new_state;\r\n    }\r\n    \r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport configureStore from './storeConfig';\r\n\r\n\r\nconst store = configureStore();\r\nconsole.log(999,store);\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport * as thunk from 'redux-thunk';\r\nimport {createLogger} from 'redux-logger';\r\nimport reducers  from './reducers';\r\n\r\nconst configureStore = (preState = {}) => {\r\n    const middlewares = [thunk.default];\r\n    let applys = applyMiddleware(...middlewares);\r\n    return createStore(\r\n        reducers,\r\n        preState,\r\n        applys\r\n    );\r\n};\r\n\r\nexport default configureStore;"],"sourceRoot":""}